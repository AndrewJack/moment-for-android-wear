apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.getkeepsafe.dexcount'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion compileAndTargetSdkLevel
    buildToolsVersion buildTools

    defaultConfig {
        applicationId "technology.mainthread.apps.moment"
        minSdkVersion minSdkLevel
        targetSdkVersion compileAndTargetSdkLevel
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            storeFile keyProps["store"] != null ? file(keyProps["store"]) : null
            keyAlias keyProps["alias"] ?: ""
            storePassword keyProps["storePass"] ?: ""
            keyPassword keyProps["pass"] ?: ""
        }
    }

    productFlavors {
        local {
            applicationId "technology.mainthread.apps.moment.local"
            ext.enableCrashlytics = false
        }

        dev {
            applicationId "technology.mainthread.apps.moment.dev"
            ext.enableCrashlytics = false
        }

        prod {
            applicationId "technology.mainthread.apps.moment"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            versionNameSuffix '_debug_' + gitSha()
            applicationIdSuffix '.debug'
        }
        release {
            if (keyProps["store"] != null) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
    // Local
    compile project(':common')
    compile project(path: ':backend', configuration: 'android-endpoints')

    // Dagger 2
    compile "com.google.dagger:dagger:${daggerVersion}"
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    provided "org.glassfish:javax.annotation:10.0-b28"

    // Android Wear
    devWearApp project(path: ':wear', configuration: 'devRelease')
    prodWearApp project(path: ':wear', configuration: 'prodRelease')

    // Google Android Libraries
    compile "com.google.android.gms:play-services-analytics:${commonPlayServicesVersion}"
    compile "com.google.android.gms:play-services-gcm:${commonPlayServicesVersion}"
    compile "com.google.android.gms:play-services-plus:${commonPlayServicesVersion}"
    compile "com.google.android.gms:play-services-identity:${commonPlayServicesVersion}"
    compile "com.google.android.gms:play-services-wearable:${commonPlayServicesVersion}"

    compile "com.android.support:support-v13:${commonSupportLibraryVersion}"
    compile "com.android.support:appcompat-v7:${commonSupportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${commonSupportLibraryVersion}"
    compile "com.android.support:cardview-v7:${commonSupportLibraryVersion}"
    compile "com.android.support:design:${commonSupportLibraryVersion}"

    // Other
    compile "com.github.traex.rippleeffect:library:1.3"
    compile "com.squareup.okhttp:okhttp:2.5.0"
    compile "com.squareup.picasso:picasso:2.5.2"
    compile('de.psdev.licensesdialog:licensesdialog:1.8.0') { exclude module: 'support-v4' }
    compile 'com.afollestad:material-dialogs:0.7.9.1'

    // dev tools
    debugCompile "com.facebook.stetho:stetho:1.2.0"
    debugCompile "com.facebook.stetho:stetho-okhttp:1.2.0"
    debugCompile "com.squareup.leakcanary:leakcanary-android:1.4-SNAPSHOT"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:1.4-SNAPSHOT"
}

dexcount {
    includeClasses = false
    includeFieldCount = false
    printAsTree = true
    orderByMethodCount = true
}

android.variantFilter { variant ->
    if (
    (variant.buildType.name.equals('release') && variant.getFlavors().get(0).name.equals('local'))
    ) {
        variant.setIgnore(true);
    } else {
        variant.setIgnore(false);
    }
}

apply from: '../config/static-analysis.gradle'
